name: CD workflow for ruleset

on:
  pull_request:
    types: [opened, synchronize]
  push:

permissions:
  pull-requests: write  

jobs:
  CD:
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Extract commit SHA
        id: sha
        run: echo "Commit_SHA=${{ github.event.pull_request.head.sha }}" >> $GITHUB_OUTPUT

      - name: Get commit message
        id: get-commit-message
        run: |
          echo "Pull request commit message:"
          COMMIT_MESSAGE=$(git log --pretty=%B -1 ${{ steps.sha.outputs.Commit_SHA }} | tail -1)
          echo "message=$COMMIT_MESSAGE" >> $GITHUB_OUTPUT

      - name: Use the commit message
        id: commit-msg
        run: |
          echo "commit_string=${{ env.message }}" >> $GITHUB_OUTPUT
        env:
          message: ${{ steps.get-commit-message.outputs.message }}

      - name: Print github context
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        run: echo "$GITHUB_CONTEXT"    

      - name: Use the commit message in condition
        if: ${{ (steps.commit-msg.outputs.commit_string == 'Merge branch *') }}
        run: |
          string="${{ steps.get-commit-message.outputs.message }} "
          if [[ "$string" =~ ^Merge\ branch\ (.*) ]]; then
            echo "The commit message is: ${{ env.message }}"
          else
            echo "Invalid format: doesn't start with 'Merge branch'"
          fi
          
        env:
          message: ${{ steps.get-commit-message.outputs.message }}    

